<template>
  <div :class="$style.root"></div>
</template>

<script>
export default {
  props: {},
  data: function() {
    return {
      myChart: null,
      option: {
        textStyle: {
          color: "#fffbff"
        },
        title: {
          text: "CBD功能区历年税收占比(%)",
          textStyle: {
            color: "#fffdff",
            fontSize: 18,
            fontFamily: "Microsoft YaHei",
            fontWeight: "lighter"
          },
          top: 20,
          left: 20
        },

        tooltip: {
          show: "true",
          trigger: "item",
          backgroundColor: "rgba(0,0,0,0.7)", // 背景
          padding: [8, 10], //内边距
          extraCssText: "box-shadow: 0 0 3px rgba(255, 255, 255, 0.4);", //添加阴影
          formatter: function(params) {
            return params.name + " ： " + params.value + " %";
          }
        },
        grid: {
          left: "3%",
          right: "7%",
          bottom: "6%",
          containLabel: true
        },

        xAxis: [
          {
            type: "category",
            axisTick: {
              show: false
            },
            axisLine: {
              show: true,
              lineStyle: {
                color: "#49c2dc"
              }
            },
            axisLabel: {
              inside: false,
              textStyle: {
                color: "#fffbff",
                fontWeight: "normal",
                fontSize: "12"
              }

            },
            data: ['2015年', '2016年', '2017年', '2018年']
          },
          {
            type: "category",
            axisLine: {
              show: false
            },
            axisTick: {
              show: false
            },
            axisLabel: {
              show: false
            },
            splitArea: {
              show: false
            },
            splitLine: {
              show: false
            },
            data: [2015, 2016, 2017, 2018]
          }
        ],
        yAxis: {
          type: "value",
          axisTick: {
            show: false
          },
          axisLine: {
            show: true,
            lineStyle: {
              color: "#49c2dc"
            }
          },
          splitLine: {
            show: true,
            lineStyle: {
              color: "#12446c "
            }
          },
          axisLabel: {
            textStyle: {
              color: "#fffbff",
              fontWeight: "normal",
              fontSize: "12"
            },
            formatter: "{value}%"
          }
        },
        series: [
          {
            type: "bar",
            itemStyle: {
              normal: {
                show: true,
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                  {
                    offset: 0,
                    color: "#00c0e9"
                  },
                  {
                    offset: 1,
                    color: "#3b73cf"
                  }
                ]),
                // barBorderRadius: 10,
                borderWidth: 0
              },
              emphasis: {
                shadowBlur: 15,
                shadowColor: "rgba(105,123, 214, 0.7)"
              }
            },
            zlevel: 2,
            barWidth: "30%",
            data: [43.7, 57, 50, 51.1]
          },
          {
            name: "",
            type: "bar",
            xAxisIndex: 1,
            zlevel: 1,
            itemStyle: {
              normal: {
                color: "#1175ff",
                borderWidth: 0,
                shadowBlur: {
                  shadowColor: "rgba(255,255,255,0.31)",
                  shadowBlur: 10,
                  shadowOffsetX: 1,
                  shadowOffsetY: 2
                }
              }
            },
            barWidth: "30%",
            data: [100, 100, 100, 100]
          }
        ]
      }
    };
  },
  mounted() {
    this.myChart = echarts.init(this.$el);
    this.myChart.setOption(this.option);
  },
  methods: {
    init: function(title, v) {
      this.option.title.text = title;

      let xs = [],
        ys = [],
        that = this;
      this.option.title.text = title;
      v.forEach(function(e, i) {
        xs.push(e[0]+'年'); //获取年份
        ys.push(e[1]);
      });
      that.option.series[0].data = ys;
      this.option.xAxis.data = xs;

      this.myChart.setOption(this.option);
    }
  }
};
</script>
<style lang="scss" module>
.root {
  width: 100%;
  height: 100%;
}
</style>
