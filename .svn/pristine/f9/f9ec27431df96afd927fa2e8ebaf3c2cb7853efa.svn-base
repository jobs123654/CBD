<template>
  <div class="root"></div>
</template>

<script>
export default {
  name: "Cesium",
  data() {
    return {
      sceneConfig: config.threeDimensional
    };
  },
  mounted() {
    this.init();
  },
  beforeDestroy() {
    if (window.Viewer) {
      try {
        window.Viewer.destroy();
      } catch (e) {
        console.error("摧毁viewer失败！");
      }
      window.Viewer = null;
    }
  },
  methods: {
    init() {
      let self = this;
      let viewer = new Cesium.Viewer(this.$el, this.sceneConfig.option);
      window.Viewer = viewer;
      viewer._cesiumWidget._creditContainer.style.display = "none";
      //添加SuperMap iServer发布的影像服务
      viewer.imageryLayers.addImageryProvider(
        new Cesium.SuperMapImageryProvider({
          url: self.sceneConfig.map_url
        })
      );
      let scene = viewer.scene;
      let widget = viewer.cesiumWidget;

      try {
        let promise = scene.open(this.sceneConfig.sceneUrl);
        Cesium.when.all(
          promise,
          layers => {
            let style = new Cesium.Style3D();
            style.bottomAltitude = -39;
            layers.forEach(layer => {
              if (layer.name.indexOf("JZ") == -1) {
                layer.selectEnabled = false;
              }
              layer.style3D = style;
              layer.refresh();
            });
            let point = new Cesium.Cartesian3(
              self.sceneConfig.center.x,
              self.sceneConfig.center.y,
              self.sceneConfig.center.z
            );

            let pointCartographic = scene.camera._projection.unproject(point);
            //转换至经纬度
            let pointCX = Cesium.Math.toDegrees(pointCartographic.longitude);
            let pointCY = Cesium.Math.toDegrees(pointCartographic.latitude);

            scene.camera.setView({
              destination: Cesium.Cartesian3.fromDegrees(
                pointCX,
                pointCY,
                pointCartographic.height
              ),
              orientation: {
                heading: 0,
                pitch: -Cesium.Math.PI_OVER_TWO,
                roll: 0
              }
            });
          },
          e => {
            let title = "加载SCP失败，请检查网络连接状态或者url地址是否正确？";
            widget.showErrorPanel(title, undefined, e);
          }
        );
      } catch (e) {
        if (widget._showRenderLoopErrors) {
          let title = "渲染时发生错误，已停止渲染。";
          widget.showErrorPanel(title, undefined, e);
        }
      }
    }
  }
};
</script>

<style lang="scss" scoped>
.root {
  width: 100%;
  height: 100%;
}
</style>
